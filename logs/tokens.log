(<TokenType.KEYWORD_FUNCTION: 'fn'>, 'fn', 1)
(<TokenType.IDENTIFIER: 'ID'>, 'calculadora', 1)
(<TokenType.PUNCTUATOR_LPAREN: '('>, '(', 1)
(<TokenType.IDENTIFIER: 'ID'>, 'op', 1)
(<TokenType.PUNCTUATOR_COLON: ':'>, ':', 1)
(<TokenType.KEYWORD_CHAR: 'char'>, 'char', 1)
(<TokenType.PUNCTUATOR_COMMA: ','>, ',', 1)
(<TokenType.IDENTIFIER: 'ID'>, 'x', 1)
(<TokenType.PUNCTUATOR_COLON: ':'>, ':', 1)
(<TokenType.KEYWORD_FLOAT: 'float'>, 'float', 1)
(<TokenType.PUNCTUATOR_COMMA: ','>, ',', 1)
(<TokenType.IDENTIFIER: 'ID'>, 'y', 1)
(<TokenType.PUNCTUATOR_COLON: ':'>, ':', 1)
(<TokenType.KEYWORD_FLOAT: 'float'>, 'float', 1)
(<TokenType.PUNCTUATOR_RPAREN: ')'>, ')', 1)
(<TokenType.SYMBOL_ARROW: '->'>, '->', 1)
(<TokenType.KEYWORD_FLOAT: 'float'>, 'float', 1)
(<TokenType.PUNCTUATOR_LBRACE: '{'>, '{', 1)
(<TokenType.KEYWORD_IF: 'if'>, 'if', 3)
(<TokenType.IDENTIFIER: 'ID'>, 'op', 3)
(<TokenType.SYMBOL_EQUAL: '=='>, '==', 3)
(<TokenType.CHAR_LITERAL: 'CHAR_LITERAL'>, "'+'", 3)
(<TokenType.PUNCTUATOR_LBRACE: '{'>, '{', 3)
(<TokenType.KEYWORD_RETURN: 'return'>, 'return', 4)
(<TokenType.IDENTIFIER: 'ID'>, 'x', 4)
(<TokenType.OPERATOR_PLUS: '+'>, '+', 4)
(<TokenType.IDENTIFIER: 'ID'>, 'y', 4)
(<TokenType.PUNCTUATOR_SEMICOLON: ';'>, ';', 4)
(<TokenType.PUNCTUATOR_RBRACE: '}'>, '}', 5)
(<TokenType.KEYWORD_ELSE: 'else'>, 'else', 6)
(<TokenType.KEYWORD_IF: 'if'>, 'if', 6)
(<TokenType.IDENTIFIER: 'ID'>, 'op', 6)
(<TokenType.SYMBOL_EQUAL: '=='>, '==', 6)
(<TokenType.CHAR_LITERAL: 'CHAR_LITERAL'>, "'-'", 6)
(<TokenType.PUNCTUATOR_LBRACE: '{'>, '{', 6)
(<TokenType.KEYWORD_RETURN: 'return'>, 'return', 7)
(<TokenType.IDENTIFIER: 'ID'>, 'x', 7)
(<TokenType.OPERATOR_MINUS: '-'>, '-', 7)
(<TokenType.IDENTIFIER: 'ID'>, 'y', 7)
(<TokenType.PUNCTUATOR_SEMICOLON: ';'>, ';', 7)
(<TokenType.PUNCTUATOR_RBRACE: '}'>, '}', 8)
(<TokenType.KEYWORD_ELSE: 'else'>, 'else', 9)
(<TokenType.KEYWORD_IF: 'if'>, 'if', 9)
(<TokenType.IDENTIFIER: 'ID'>, 'op', 9)
(<TokenType.SYMBOL_EQUAL: '=='>, '==', 9)
(<TokenType.CHAR_LITERAL: 'CHAR_LITERAL'>, "'*'", 9)
(<TokenType.PUNCTUATOR_LBRACE: '{'>, '{', 9)
(<TokenType.KEYWORD_RETURN: 'return'>, 'return', 10)
(<TokenType.IDENTIFIER: 'ID'>, 'x', 10)
(<TokenType.OPERATOR_MULTIPLY: '*'>, '*', 10)
(<TokenType.IDENTIFIER: 'ID'>, 'y', 10)
(<TokenType.PUNCTUATOR_SEMICOLON: ';'>, ';', 10)
(<TokenType.PUNCTUATOR_RBRACE: '}'>, '}', 11)
(<TokenType.KEYWORD_ELSE: 'else'>, 'else', 12)
(<TokenType.KEYWORD_IF: 'if'>, 'if', 12)
(<TokenType.IDENTIFIER: 'ID'>, 'op', 12)
(<TokenType.SYMBOL_EQUAL: '=='>, '==', 12)
(<TokenType.CHAR_LITERAL: 'CHAR_LITERAL'>, "'/'", 12)
(<TokenType.PUNCTUATOR_LBRACE: '{'>, '{', 12)
(<TokenType.KEYWORD_IF: 'if'>, 'if', 13)
(<TokenType.IDENTIFIER: 'ID'>, 'y', 13)
(<TokenType.SYMBOL_EQUAL: '=='>, '==', 13)
(<TokenType.INT_CONSTANT: 'INT_CONST'>, '0', 13)
(<TokenType.PUNCTUATOR_LBRACE: '{'>, '{', 13)
(<TokenType.KEYWORD_RETURN: 'return'>, 'return', 14)
(<TokenType.FLOAT_CONSTANT: 'FLOAT_CONST'>, '0.0', 14)
(<TokenType.PUNCTUATOR_SEMICOLON: ';'>, ';', 14)
(<TokenType.PUNCTUATOR_RBRACE: '}'>, '}', 15)
(<TokenType.KEYWORD_RETURN: 'return'>, 'return', 16)
(<TokenType.IDENTIFIER: 'ID'>, 'x', 16)
(<TokenType.OPERATOR_DIVIDE: '/'>, '/', 16)
(<TokenType.IDENTIFIER: 'ID'>, 'y', 16)
(<TokenType.PUNCTUATOR_SEMICOLON: ';'>, ';', 16)
(<TokenType.PUNCTUATOR_RBRACE: '}'>, '}', 17)
(<TokenType.KEYWORD_RETURN: 'return'>, 'return', 18)
(<TokenType.FLOAT_CONSTANT: 'FLOAT_CONST'>, '0.0', 18)
(<TokenType.PUNCTUATOR_SEMICOLON: ';'>, ';', 18)
(<TokenType.PUNCTUATOR_RBRACE: '}'>, '}', 19)
(<TokenType.KEYWORD_FUNCTION: 'fn'>, 'fn', 21)
(<TokenType.IDENTIFIER: 'ID'>, 'main', 21)
(<TokenType.PUNCTUATOR_LPAREN: '('>, '(', 21)
(<TokenType.PUNCTUATOR_RPAREN: ')'>, ')', 21)
(<TokenType.PUNCTUATOR_LBRACE: '{'>, '{', 21)
(<TokenType.KEYWORD_LET: 'let'>, 'let', 22)
(<TokenType.IDENTIFIER: 'ID'>, 'a', 22)
(<TokenType.PUNCTUATOR_COMMA: ','>, ',', 22)
(<TokenType.IDENTIFIER: 'ID'>, 'b', 22)
(<TokenType.PUNCTUATOR_COLON: ':'>, ':', 22)
(<TokenType.KEYWORD_FLOAT: 'float'>, 'float', 22)
(<TokenType.PUNCTUATOR_SEMICOLON: ';'>, ';', 22)
(<TokenType.IDENTIFIER: 'ID'>, 'a', 23)
(<TokenType.OPERATOR_ASSIGN: '='>, '=', 23)
(<TokenType.FLOAT_CONSTANT: 'FLOAT_CONST'>, '1.8', 23)
(<TokenType.PUNCTUATOR_SEMICOLON: ';'>, ';', 23)
(<TokenType.IDENTIFIER: 'ID'>, 'b', 24)
(<TokenType.OPERATOR_ASSIGN: '='>, '=', 24)
(<TokenType.FLOAT_CONSTANT: 'FLOAT_CONST'>, '7.2', 24)
(<TokenType.PUNCTUATOR_SEMICOLON: ';'>, ';', 24)
(<TokenType.KEYWORD_PRINTLN: 'println'>, 'println', 25)
(<TokenType.PUNCTUATOR_LPAREN: '('>, '(', 25)
(<TokenType.FORMATTED_STRING: 'FORMATTED_STRING'>, '"{}"', 25)
(<TokenType.PUNCTUATOR_COMMA: ','>, ',', 25)
(<TokenType.IDENTIFIER: 'ID'>, 'calculadora', 25)
(<TokenType.PUNCTUATOR_LPAREN: '('>, '(', 25)
(<TokenType.CHAR_LITERAL: 'CHAR_LITERAL'>, "'*'", 25)
(<TokenType.PUNCTUATOR_COMMA: ','>, ',', 25)
(<TokenType.IDENTIFIER: 'ID'>, 'a', 25)
(<TokenType.PUNCTUATOR_COMMA: ','>, ',', 25)
(<TokenType.IDENTIFIER: 'ID'>, 'b', 25)
(<TokenType.PUNCTUATOR_RPAREN: ')'>, ')', 25)
(<TokenType.PUNCTUATOR_RPAREN: ')'>, ')', 25)
(<TokenType.PUNCTUATOR_SEMICOLON: ';'>, ';', 25)
(<TokenType.PUNCTUATOR_RBRACE: '}'>, '}', 26)
